name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers the action when a tag starting with 'v' is pushed (e.g., v1.0.0)

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Zip the files or folders (modify the paths to target the files you want)
    - name: Zip libavcodec
      run: |
        zip -r -y libavcodec.xcframework.zip libavcodec.xcframework
        ls -lah  # To display the zipped file in the log

    # Zip the files or folders (modify the paths to target the files you want)
    - name: Zip libavdevice
      run: |
        zip -r -y libavdevice.xcframework.zip libavdevice.xcframework
        ls -lah  # To display the zipped file in the log

    # Zip the files or folders (modify the paths to target the files you want)
    - name: Zip libavfilter
      run: |
        zip -r -y libavfilter.xcframework.zip libavfilter.xcframework
        ls -lah  # To display the zipped file in the log

    # Zip the files or folders (modify the paths to target the files you want)
    - name: Zip libavformat
      run: |
        zip -r -y libavformat.xcframework.zip libavformat.xcframework
        ls -lah  # To display the zipped file in the log

    # Zip the files or folders (modify the paths to target the files you want)
    - name: Zip libavutil
      run: |
        zip -r -y libavutil.xcframework.zip libavutil.xcframework
        ls -lah  # To display the zipped file in the log

    # Zip the files or folders (modify the paths to target the files you want)
    - name: Zip libswresample
      run: |
        zip -r -y libswresample.xcframework.zip libswresample.xcframework
        ls -lah  # To display the zipped file in the log

    # Zip the files or folders (modify the paths to target the files you want)
    - name: Zip libswscale
      run: |
        zip -r -y libswscale.xcframework.zip libswscale.xcframework
        ls -lah  # To display the zipped file in the log

    # Generate checksums for the zip files
    - name: Generate SHA256 checksum for zips
      run: |
        checksum1=$(sha256sum ./libavcodec.xcframework.zip | awk '{ print $1 }')
        checksum2=$(sha256sum ./libavdevice.xcframework.zip | awk '{ print $1 }')
        checksum3=$(sha256sum ./libavfilter.xcframework.zip | awk '{ print $1 }')
        checksum4=$(sha256sum ./libavformat.xcframework.zip | awk '{ print $1 }')
        checksum5=$(sha256sum ./libavutil.xcframework.zip | awk '{ print $1 }')
        checksum6=$(sha256sum ./libswresample.xcframework.zip | awk '{ print $1 }')
        checksum7=$(sha256sum ./libswscale.xcframework.zip | awk '{ print $1 }')
        echo "::set-output name=asha256::$checksum1"
        echo "::set-output name=bsha256::$checksum2"
        echo "::set-output name=csha256::$checksum2"
        echo "::set-output name=dsha256::$checksum2"
        echo "::set-output name=esha256::$checksum2"
        echo "::set-output name=fsha256::$checksum2"
        echo "::set-output name=gsha256::$checksum2"
        echo "FIRST_CHECKSUM=$checksum1" >> $GITHUB_ENV
        echo "SECOND_CHECKSUM=$checksum2" >> $GITHUB_ENV
        echo "THIRD_CHECKSUM=$checksum3" >> $GITHUB_ENV
        echo "FOURTH_CHECKSUM=$checksum4" >> $GITHUB_ENV
        echo "FIFTH_CHECKSUM=$checksum5" >> $GITHUB_ENV
        echo "SIXTH_CHECKSUM=$checksum6" >> $GITHUB_ENV
        echo "SEVENTH_CHECKSUM=$checksum7" >> $GITHUB_ENV

    # Create a GitHub release and upload the zip file to it
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}  # The tag that triggered the release
        release_name: "Release ${{ github.ref }}"
        draft: false
        prerelease: false
        body: |
          ## Release ${{ github.ref }}
          
          ### Checksums
          - **libavcodec.xcframework.zip**: `${{ env.FIRST_CHECKSUM }}`
          - **libavdevice.xcframework.zip**: `${{ env.SECOND_CHECKSUM }}`
          - **libavfilter.xcframework.zip**: `${{ env.THIRD_CHECKSUM }}`
          - **libavformat.xcframework.zip**: `${{ env.FOURTH_CHECKSUM }}`
          - **libavutil.xcframework.zip**: `${{ env.FIFTH_CHECKSUM }}`
          - **libswresample.xcframework.zip**: `${{ env.SIXTH_CHECKSUM }}`
          - **libswscale.xcframework.zip**: `${{ env.SEVENTH_CHECKSUM }}`

    # Upload the zip file as a release asset
    - name: Upload libavcodec Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libavcodec.xcframework.zip
        asset_name: libavcodec.xcframework.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Add GITHUB_TOKEN to the upload asset step

    # Upload the zip file as a release asset
    - name: Upload libavdevice Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libavdevice.xcframework.zip
        asset_name: libavdevice.xcframework.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Add GITHUB_TOKEN to the upload asset step

    # Upload the zip file as a release asset
    - name: Upload libavfilter Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libavfilter.xcframework.zip
        asset_name: libavfilter.xcframework.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Add GITHUB_TOKEN to the upload asset step

    # Upload the zip file as a release asset
    - name: Upload libavformat Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libavformat.xcframework.zip
        asset_name: libavformat.xcframework.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Add GITHUB_TOKEN to the upload asset step
    
    # Upload the zip file as a release asset
    - name: Upload libavutil Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libavutil.xcframework.zip
        asset_name: libavutil.xcframework.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Add GITHUB_TOKEN to the upload asset step

    # Upload the zip file as a release asset
    - name: Upload libswresample Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libswresample.xcframework.zip
        asset_name: libswresample.xcframework.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Add GITHUB_TOKEN to the upload asset step

    # Upload the zip file as a release asset
    - name: Upload libswscale Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libswscale.xcframework.zip
        asset_name: libswscale.xcframework.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Add GITHUB_TOKEN to the upload asset step

